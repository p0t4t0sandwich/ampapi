ADSModule.AddDatastore(newDatastore)
ADSModule.ApplyInstanceConfiguration(InstanceID,Args,RebuildConfiguration)
ADSModule.ApplyTemplate(InstanceID,TemplateID,NewFriendlyName,Secret,RestartIfPreviouslyRunning)
ADSModule.AttachADS(Friendly,IsHTTPS,Host,Port,InstanceID)
ADSModule.CloneTemplate(Id,NewName)
ADSModule.ConvertToManaged(InstanceName)
ADSModule.CreateDeploymentTemplate(Name)
ADSModule.CreateInstance(TargetADSInstance,NewInstanceId,Module,InstanceName,FriendlyName,IPBinding,PortNumber,AdminUsername,AdminPassword,ProvisionSettings,AutoConfigure,PostCreate,StartOnBoot,DisplayImageSource,TargetDatastore)
ADSModule.CreateLocalInstance(Instance,PostCreate)
ADSModule.DeleteDatastore(id)
ADSModule.DeleteDeploymentTemplate(Id)
ADSModule.DeleteInstance(InstanceName)
ADSModule.DeleteInstanceUsers(InstanceId)
ADSModule.DeployTemplate(TemplateID,NewUsername,NewPassword,NewEmail,RequiredTags,Tag,FriendlyName,Secret,PostCreate,ExtraProvisionSettings)
ADSModule.DetatchTarget(Id)
ADSModule.ExtractEverywhere(SourceArchive)
ADSModule.GetApplicationEndpoints(instanceId)
ADSModule.GetDatastore(id)
ADSModule.GetDatastoreInstances(datastoreId)
ADSModule.GetDatastores()
ADSModule.GetDeploymentTemplates()
ADSModule.GetGroup(GroupId)
ADSModule.GetInstance(InstanceId)
ADSModule.GetInstanceNetworkInfo(InstanceName)
ADSModule.GetInstanceStatuses()
ADSModule.GetInstances()
ADSModule.GetLocalInstances()
ADSModule.GetProvisionArguments(ModuleName)
ADSModule.GetProvisionFitness()
ADSModule.GetSupportedApplications()
ADSModule.GetTargetInfo()
ADSModule.HandoutInstanceConfigs(ForModule,SettingNode,Values)
ADSModule.ManageInstance(InstanceId)
ADSModule.ModifyCustomFirewallRule(instanceId,PortNumber,Range,Protocol,Description,Open)
ADSModule.MoveInstanceDatastore(instanceId,datastoreId)
ADSModule.ReactivateLocalInstances()
ADSModule.RefreshAppCache()
ADSModule.RefreshGroup(GroupId)
ADSModule.RefreshInstanceConfig(InstanceId)
ADSModule.RefreshRemoteConfigStores()
ADSModule.RegisterTarget(controllerUrl,myUrl,username,password,twoFactorToken,friendlyName)
ADSModule.RepairDatastore(id)
ADSModule.RequestDatastoreSizeCalculation(datastoreId)
ADSModule.RestartInstance(InstanceName)
ADSModule.Servers(id,REQ_RAWJSON)
ADSModule.SetInstanceConfig(InstanceName,SettingNode,Value)
ADSModule.SetInstanceNetworkInfo(InstanceId,PortMappings)
ADSModule.SetInstanceSuspended(InstanceName,Suspended)
ADSModule.StartAllInstances()
ADSModule.StartInstance(InstanceName)
ADSModule.StopAllInstances()
ADSModule.StopInstance(InstanceName)
ADSModule.TestADSLoginDetails(url,username,password)
ADSModule.UpdateDatastore(updatedDatastore)
ADSModule.UpdateDeploymentTemplate(templateToUpdate)
ADSModule.UpdateInstanceInfo(InstanceId,FriendlyName,Description,StartOnBoot,Suspended,ExcludeFromFirewall,RunInContainer,ContainerMemory,MemoryPolicy,ContainerMaxCPU,ContainerImage)
ADSModule.UpdateTarget(TargetID)
ADSModule.UpdateTargetInfo(Id,FriendlyName,Url,Description,Tags)
ADSModule.UpgradeAllInstances(RestartRunning)
ADSModule.UpgradeInstance(InstanceName)
Core.AcknowledgeAMPUpdate()
Core.AddEventTrigger(triggerId)
Core.AddIntervalTrigger(months,days,hours,minutes,daysOfMonth,description)
Core.AddTask(TriggerID,MethodID,ParameterMapping)
Core.AsyncTest()
Core.CancelTask(TaskId)
Core.ChangeTaskOrder(TriggerID,TaskID,NewOrder)
Core.ChangeUserPassword(Username,OldPassword,NewPassword,TwoFactorPIN)
Core.ConfirmTwoFactorSetup(Username,TwoFactorCode)
Core.CreateRole(Name,AsCommonRole)
Core.CreateTestTask()
Core.CreateUser(Username)
Core.CurrentSessionHasPermission(PermissionNode)
Core.DeleteInstanceUsers(InstanceId)
Core.DeleteRole(RoleId)
Core.DeleteTask(TriggerID,TaskID)
Core.DeleteTrigger(TriggerID)
Core.DeleteUser(Username)
Core.DisableTwoFactor(Password,TwoFactorCode)
Core.DismissAllTasks()
Core.DismissTask(TaskId)
Core.EditIntervalTrigger(Id,months,days,hours,minutes,daysOfMonth,description)
Core.EditTask(TriggerID,TaskID,ParameterMapping)
Core.EnableTwoFactor(Username,Password)
Core.EndUserSession(Id)
Core.GetAMPRolePermissions(RoleId)
Core.GetAMPUserInfo(Username)
Core.GetAMPUsersSummary()
Core.GetAPISpec()
Core.GetActiveAMPSessions()
Core.GetAllAMPUserInfo()
Core.GetAuditLogEntries(Before,Count)
Core.GetConfig(node)
Core.GetConfigs(nodes)
Core.GetDiagnosticsInfo()
Core.GetModuleInfo()
Core.GetNewGuid()
Core.GetPermissionsSpec()
Core.GetPortSummaries()
Core.GetProvisionSpec()
Core.GetRemoteLoginToken(Description,IsTemporary)
Core.GetRole(RoleId)
Core.GetRoleData()
Core.GetRoleIds()
Core.GetScheduleData()
Core.GetSettingValues(SettingNode,WithRefresh)
Core.GetSettingsSpec()
Core.GetStatus()
Core.GetTasks()
Core.GetTimeIntervalTrigger(Id)
Core.GetUpdateInfo()
Core.GetUpdates()
Core.GetUserActionsSpec()
Core.GetUserInfo(UID)
Core.GetUserList()
Core.GetWebauthnChallenge()
Core.GetWebauthnCredentialIDs(username)
Core.GetWebauthnCredentialSummaries()
Core.GetWebserverMetrics()
Core.Kill()
Core.Login(username,password,token,rememberMe)
Core.Logout()
Core.RefreshSettingValueList(Node)
Core.RefreshSettingsSourceCache()
Core.RenameRole(RoleId,NewName)
Core.ResetUserPassword(Username,NewPassword)
Core.Restart()
Core.RestartAMP()
Core.Resume()
Core.RevokeWebauthnCredential(ID)
Core.RunEventTriggerImmediately(triggerId)
Core.SendConsoleMessage(message)
Core.SetAMPRolePermission(RoleId,PermissionNode,Enabled)
Core.SetAMPUserRoleMembership(UserId,RoleId,IsMember)
Core.SetConfig(node,value)
Core.SetConfigs(data)
Core.SetTriggerEnabled(Id,Enabled)
Core.Sleep()
Core.Start()
Core.Stop()
Core.Suspend()
Core.UpdateAMPInstance()
Core.UpdateAccountInfo(EmailAddress,TwoFactorPIN)
Core.UpdateApplication()
Core.UpdateUserInfo(Username,Disabled,PasswordExpires,CannotChangePassword,MustChangePassword,EmailAddress)
Core.UpgradeAMP()
Core.WebauthnRegister(attestationObject,clientDataJSON,description)
EmailSenderPlugin.TestSMTPSettings()
FileManagerPlugin.AppendFileChunk(Filename,Data,Delete)
FileManagerPlugin.CalculateFileMD5Sum(FilePath)
FileManagerPlugin.ChangeExclusion(ModifyPath,AsDirectory,Exclude)
FileManagerPlugin.CopyFile(Origin,TargetDirectory)
FileManagerPlugin.CreateArchive(PathToArchive)
FileManagerPlugin.CreateDirectory(NewPath)
FileManagerPlugin.DownloadFileFromURL(Source,TargetDirectory)
FileManagerPlugin.Dummy()
FileManagerPlugin.EmptyTrash(TrashDirectoryName)
FileManagerPlugin.ExtractArchive(ArchivePath,DestinationPath)
FileManagerPlugin.GetDirectoryListing(Dir)
FileManagerPlugin.GetFileChunk(Filename,Position,Length)
FileManagerPlugin.ReadFileChunk(Filename,Offset,ChunkSize)
FileManagerPlugin.RenameDirectory(oldDirectory,NewDirectoryName)
FileManagerPlugin.RenameFile(Filename,NewFilename)
FileManagerPlugin.TrashDirectory(DirectoryName)
FileManagerPlugin.TrashFile(Filename)
FileManagerPlugin.WriteFileChunk(Filename,Data,Offset,FinalChunk)
LocalFileBackupPlugin.DeleteFromS3(BackupId)
LocalFileBackupPlugin.DeleteLocalBackup(BackupId)
LocalFileBackupPlugin.DownloadFromS3(BackupId)
LocalFileBackupPlugin.GetBackups()
LocalFileBackupPlugin.RestoreBackup(BackupId,DeleteExistingData)
LocalFileBackupPlugin.SetBackupSticky(BackupId,Sticky)
LocalFileBackupPlugin.TakeBackup(Title,Description,Sticky)
LocalFileBackupPlugin.UploadToS3(BackupId)
